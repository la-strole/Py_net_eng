# -*- coding: utf-8 -*-
'''
Задание 5.2a

Всё, как в задании 5.2, но, если пользователь ввел адрес хоста, а не адрес сети,
надо преобразовать адрес хоста в адрес сети и вывести адрес сети и маску, как в задании 5.2.

Пример адреса сети (все биты хостовой части равны нулю):
* 10.0.1.0/24
* 190.1.0.0/16

Пример адреса хоста:
* 10.0.1.1/24 - хост из сети 10.0.1.0/24
* 10.0.5.1/30 - хост из сети 10.0.5.0/30

Если пользователь ввел адрес 10.0.1.1/24,
вывод должен быть таким:

Network:
10        0         1         0
00001010  00000000  00000001  00000000

Mask:
/24
255       255       255       0
11111111  11111111  11111111  00000000

Проверить работу скрипта на разных комбинациях сеть/маска.

Ограничение: Все задания надо выполнять используя только пройденные темы.

'''
address = input()
ip = address[:-3].split('.')
ip_bin = (f"{int(ip[0]):>08b}{int(ip[1]):>08b}{int(ip[2]):>08b}{int(ip[3]):>08b}"[:int(address[-2:])-32]) + '0'*(32-int(address[-2:]))
mask = f"{'1'*int(address[-2:]):<032}"

print(f"""
      Network:
      {int(ip_bin[:8], 2):<10} {int(ip_bin[8:16], 2):<10} {int(ip_bin[16:24], 2):<10} {int(ip_bin[24:32], 2):<10}
      {ip_bin[:8]:<10} {ip_bin[8:16]:<10} {ip_bin[16:24]:<10} {ip_bin[24:32]:<10}
      
      Mask:
      /{address[-2:]}
      {int(mask[:8], 2):<10} {int(mask[8:16], 2):<10} {int(mask[16:24], 2):<10} {int(mask[24:32], 2):<10}
      {mask[:8]:<10} {mask[8:16]:<10} {mask[16:24]:<10} {mask[24:32]:<10} """)